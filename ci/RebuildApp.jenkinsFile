def IMAGETAGS=""

pipeline {
  agent none

  parameters {
    string(name: 'COMPONENTS',
        defaultValue: 'webapp db',
        description: 'Application Components')
    string(name: 'DOCKER_REPO',
        defaultValue: 'docker.ask4ua.com',
        description: 'Docker Repo')
    string(name: 'DOCKER_TAG_PREFIX',
        defaultValue: '1.0.0',
        description: 'Docker Tag Prefix')
    string(name: 'APPLICATION',
        defaultValue: 'webapp',
        description: 'Application')
    string(name: 'NAMESPACE',
        defaultValue: 'dev',
        description: 'Namespace')
  }
  stages {
    stage('Rebuild Application Containers') {
      steps {
        script {
          COMPONENTS.split().each { component ->
            if(IMAGETAGS){
              IMAGETAGS+=" "
            }
            IMAGETAGS+=build job: '../buildDocker', parameters: [
                [$class: 'StringParameterValue', name: 'APPLICATION', value: "${component}"],
                [$class: 'StringParameterValue', name: 'DOCKER_TAG_PREFIX', value: "${env.DOCKER_TAG_PREFIX}"],
                [$class: 'StringParameterValue', name: 'DOCKER_REPO', value: "${env.DOCKER_REPO}"]
              ]
          }
        }
      }
    }
    stage('K8s Install') {
      steps {
        build job: '../deployKubectl', parameters: [
          [$class: 'StringParameterValue', name: 'IMAGETAGS', value: "${IMAGETAGS}"]
        ]
      }
    }
    stage('Testing') {
      steps {
        script{
          echo "Some Testing"
        }
      }
    }
    stage('Fix Versions'){
      steps {
        script {
          sh """echo -n "" > IMAGETAGS
          for image in $IMAGETAGS; 
          do 
            echo $image >> ${APPLICATION}__IMAGETAGS.txt
          done
          """
          archieveArtifacts ${APPLICATION}_IMAGETAGS.txt
        }
      }
    }
  }
}