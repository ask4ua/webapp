def REPLACE_IMAGES_SCRIPTS=""
def KUBER_PARAMS='-s https://kubernetes.default.svc --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)'

pipeline {
  agent {
    kubernetes {
      label 'build-service-pod'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  scope: jenkins
spec:
  # Use service account that can deploy to all namespaces
  serviceAccountName: jenkins-helm-dev
  containers:
  - name: kubectl
    image: docker.ask4ua.com/kubectl
    command: ["cat"]
    tty: true
"""
}
   }

  parameters {
    string(name: 'APPLICATION',
        defaultValue: 'webapp',
        description: 'Application')
    string(name: 'IMAGETAGS',
        defaultValue: 'webapp db',
        description: 'space-separated IMAGES And Their Tags')
    string(name: 'NAMESPACE',
        defaultValue: 'dev',
        description: 'Deployment Namespace')
  }
  stages {
    stage('Deploy Application') {
      steps {
        container('kubectl') {
          sh """
            echo "${APPLICATION}" > APPLICATION
            echo "${IMAGETAGS}" > IMAGETAGS
          """
          sh '''
            for image in $(cat IMAGETAGS)
            do
              imageNoTag=$(echo $image | awk -F: '{print $1}')
              find k8s/$(cat APPLICATION) -type f -name '*.y*ml' -exec sed -i -e \"s|${imageNoTag}:.*|${image}|g\" {} +
            done
          '''
          sh """
            kubectl ${KUBER_PARAMS} -n ${NAMESPACE} apply -f k8s/${APPLICATION}/secrets/*.yaml;
            kubectl ${KUBER_PARAMS} -n ${NAMESPACE} apply -f k8s/${APPLICATION}/configmaps/*.yaml;
            kubectl ${KUBER_PARAMS} -n ${NAMESPACE} apply -f k8s/${APPLICATION}/ingresses/*.yaml;
            kubectl ${KUBER_PARAMS} -n ${NAMESPACE} apply -f k8s/${APPLICATION}/services/*.yaml;
            kubectl ${KUBER_PARAMS} -n ${NAMESPACE} apply -f k8s/${APPLICATION}/deployments/*.yaml;
          """
        }
      }
    }
  }
}