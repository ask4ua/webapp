REPLACE_IMAGES_SCRIPTS=""

pipeline {
  agent {
    kubernetes {
      label 'build-service-pod'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  scope: jenkins
spec:
  # Use service account that can deploy to all namespaces
  serviceAccountName: jenkins-webapp
  containers:
  - name: kubectl
    image: alpine/kubectl
    command: ["cat"]
    tty: true
"""
}
   }

  parameters {
    string(name: 'APPLICATION',
        defaultValue: 'webapp',
        description: 'Application')
    string(name: 'IMAGETAGS',
        defaultValue: 'webapp db',
        description: 'space-separated IMAGES And Their Tags')
    string(name: 'NAMESPACE',
        defaultValue: 'dev',
        description: 'Deployment Namespace')
  }
  stages {
    stage('Generate Image REplacement scripts') {
      steps {
        script {
          IMAGETAGS.split().each { image ->
            imageNoTag=image.split(":")[0]
            REPLACE_IMAGES_SCRIPTS+="""find k8s/${APPLICATION}/ -type f -name '*.y*ml' -exec sed -e -i "s/${imageNoTag}:.*/${image}/g" {} \\; """
          }
        }
      }
    }
    stage('Deploy Application') {
      steps {
        container('kubectl') {
          sh """
            ${REPLACE_IMAGES_SCRIPTS}
            kubectl -n ${NAMESPACE} apply -f k8s/${APPLICATION}/secrets/*.yaml;
            kubectl -n ${NAMESPACE} apply -f k8s/${APPLICATION}/configmaps/*.yaml;
            kubectl -n ${NAMESPACE} apply -f k8s/${APPLICATION}/ingress/*.yaml;
            kubectl -n ${NAMESPACE} apply -f k8s/${APPLICATION}/services/*.yaml;
            kubectl -n ${NAMESPACE} apply -f k8s/${APPLICATION}/deployments/*.yaml;
          """
        }
      }
    }
  }
}