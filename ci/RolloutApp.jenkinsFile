def TAG_NAME=""

pipeline {
  agent none

  parameters {
    string(name: 'APPLICATION',
        defaultValue: 'webapp',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'DOCKER_REPO',
        defaultValue: 'docker.ask4ua.com',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'DOCKERFILE_PATH',
        defaultValue: './docker/webapp',
        description: 'For forcing path to folder with dockerfile')
    string(name: 'DOCKER_TAG_PREFIX',
        defaultValue: '0.0.1',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'IMAGETAG',
        defaultValue: '',
        description: 'Empty by default - useful for forcing IMAGETAG results')
    string(name: 'NAMESPACE',
        defaultValue: 'staging',
        description: 'Namespace used for application deployment.')
    string(name: 'HELM_RELEASE_NAME',
        defaultValue: 'webapp',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'HELM_CHART',
        defaultValue: '',
        description: 'Empty by default and in such case set to APPLICATION name. Useful for forcing helm chart name.')
    string(name: 'HELM_REPO',
        defaultValue: './k8s/helm',
        description: 'Empty by default and in such case set to APPLICATION name. Useful for forcing helm chart name.')
  }
  stages {
    stage('Rebuild Application Containers') {
      steps {
        script {
          env.TAG_NAME = build(job: 'buildDocker', parameters: [
              [$class: 'StringParameterValue', name: 'COMPONENTS', value: "${APPLICATION}"],
              [$class: 'StringParameterValue', name: 'DOCKER_REPO', value: "${DOCKER_REPO}"],
              [$class: 'StringParameterValue', name: 'DOCKER_TAG_PREFIX', value: "${DOCKER_TAG_PREFIX}" ],
              [$class: 'StringParameterValue', name: 'DOCKERFILE_PATH', value: "${DOCKERFILE_PATH}" ]
            ],
            returnStdout:true)
        }
      }
    }
    stage('Test Application Container') {
      steps {
          echo "Appliction testing is skipped for now"
      }
    }
    stage('Helm Install') {
      steps {
        script {
          if(!HELM_CHART) {
            HELM_CHART=APPLICATION
          }
          if(!HELM_RELEASE_NAME) {
            HELM_RELEASE_NAME=HELM_CHART
          }
        }

        build job: 'deployHelm', parameters: [
          [$class: 'StringParameterValue', name: 'DOCKER_REPO', value: 'docker.ask4ua.com'],
          [$class: 'StringParameterValue', name: 'HELM_REPO', value: "${HELM_REPO}" ],
          [$class: 'StringParameterValue', name: 'HELM_CHART', value: "${HELM_CHART}" ],
          [$class: 'StringParameterValue', name: 'HELM_RELEASE_NAME', value: "${HELM_RELEASE_NAME.toLowerCase()}" ],
          [$class: 'StringParameterValue', name: 'HELM_PARAMETERS', value: "--set image.tag=${TAG_NAME}" ],
          [$class: 'StringParameterValue', name: 'NAMESPACE', value: "${NAMESPACE}" ]
        ]
      }
    }
  }
}