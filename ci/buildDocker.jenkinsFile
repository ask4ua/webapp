  def getFullImage(){
    return "${env.APPLICATION}:${env.DOCKER_TAG_PREFIX}-${env.BUILD_NUMBER}"
  }

pipeline {
  agent {
    kubernetes {
      label 'build-service-pod'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  scope: jenkins
spec:
  # serviceAccountName: jenkins-webapp
  containers:
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
}
   }
  parameters {
    string(name: 'DOCKER_REPO',
        defaultValue: 'docker.ask4ua.com',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'DOCKER_TAG_PREFIX',
        defaultValue: '0.0.0',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'APPLICATION',
        defaultValue: 'webapp',
        description: 'Jenkins secret ID for ARM Registry Credentials')
  }

  stages {
    stage('Rebuild Application Container') {
      steps {
        container('docker') {
          sh """
            echo "Docker repo ${env.DOCKER_REPO}"
            cd docker/${env.APPLICATION}
            echo "Starting Docker Build"
            docker build ./ -t "${env.DOCKER_REPO}/${getFullImage()}"
            docker push "${env.DOCKER_REPO}/${getFullImage()}"
          """
        }
      }
    }
    stage('Return ContainerName') {
      steps {
        scripts {
          echo "${getFullImage()}"
        }
      }
    }
  }
}