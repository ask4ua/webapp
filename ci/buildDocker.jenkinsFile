  def getFullImage(component){
    if (IMAGETAG.trim()){
      return "${env.DOCKER_REPO}/${component}:${env.IMAGETAG}"
    } else {
      return "${env.DOCKER_REPO}/${component}:${env.DOCKER_TAG_PREFIX}-${env.BUILD_NUMBER}"
    }
  }

  def IMAGETAG=''

pipeline {
  agent {
    kubernetes {
      label 'docker-build-pod'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  scope: jenkins
spec:
  # serviceAccountName: jenkins-webapp
  containers:
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
    }
  }
  parameters {
    string(name: 'DOCKER_REPO',
        defaultValue: 'docker.ask4ua.com',
        description: 'docker repo')
    string(name: 'DOCKER_REPO_SECRET',
        defaultValue: '',
        description: 'docker repo secret')
    string(name: 'DOCKER_TAG_PREFIX',
        defaultValue: '0.0.0',
        description: 'Jenkins docker tag, if not propagated - used 0.0.0')
    string(name: 'COMPONENTS',
        defaultValue: 'webapp db',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'IMAGETAG',
        defaultValue: '',
        description: 'For forcing IMAGETAG results')
  }

  stages {
    stage('Rebuild Application Container') {
      steps {
        script {
          COMPONENTS.split().each { component ->
            container('docker') {
              sh """
                  echo "Starting Docker Build for ${component}"
                  docker build ./docker/${component}/ -t "${getFullImage(component)}"
                  docker push "${getFullImage(component)}"
              """
            }
          }
        }
      }
    }
    stage('Return ContainerName') {
      steps {
        script {
          if(!IMAGETAG){
            COMPONENTS.split().each { component ->
              IMAGETAG+=getFullImage(component) + " "
            }
            if(IMAGETAG){
              env.IMAGETAG=IMAGETAG[0..<-1]
            }
            echo "${IMAGETAG}"
          }
          
        }
      }
    }
  }
}

return "${IMAGETAG}"