def TAG_NAME=""

pipeline {
  agent none

  parameters {
    string(name: 'DOCKER_REPO',
        defaultValue: 'docker.ask4ua.com',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'COMPONENTS',
        defaultValue: 'docker.ask4ua.com',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'DOCKER_TAG_PREFIX',
        defaultValue: '0.0.1',
        description: 'Jenkins secret ID for ARM Registry Credentials')
    string(name: 'IMAGETAG',
        defaultValue: '',
        description: 'For forcing IMAGETAG results')
    string(name: 'NAMESPACE',
        defaultValue: 'staging',
        description: 'Namespace used for application deployment.')
    string(name: 'HELM_RELEASE_NAME',
        defaultValue: 'webapp',
        description: 'Jenkins secret ID for ARM Registry Credentials')

  }
  stages {
    stage('Rebuild Application Containers') {
      steps {
        def TAG_NAME = build(job: 'buildDocker', parameters: [
            [$class: 'StringParameterValue', name: 'APPLICATION', value: "${APPLICATION}"],
            [$class: 'StringParameterValue', name: 'DOCKER_REPO', value: "${DOCKER_REPO}"],
            [$class: 'StringParameterValue', name: 'DOCKER_TAG_PREFIX', value: "${DOCKER_TAG_PREFIX}" ]
          ],
          returnStdout:true)
      }
    }
    stage('Test Application Container') {
      steps {
          echo "Appliction testing is skipped for now"
      }
    }
    stage('Helm Install') {
      steps {
        build job: 'deployHelm', parameters: [
          [$class: 'StringParameterValue', name: 'DOCKER_REPO', value: 'docker.ask4ua.com'],
          [$class: 'StringParameterValue', name: 'HELM_REPO', value: "${HELM_REPO}" ],
          [$class: 'StringParameterValue', name: 'HELM_CHART', value: "${HELM_CHART}" ],
          [$class: 'StringParameterValue', name: 'HELM_RELEASE_NAME', value: "${HELM_RELEASE_NAME}.toLowerCase()" ],
          [$class: 'StringParameterValue', name: 'HELM_PARAMETERS', value: "--set image.tag=${TAG_NAME}" ],
          [$class: 'StringParameterValue', name: 'NAMESPACE', value: "${NAMESPACE}" ]
        ]
      }
    }
  }
}